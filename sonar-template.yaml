# Source: sonarqube/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-sonarqube-config
  labels:
    app: sonarqube
    chart: sonarqube-5.2.1
    release: sonarqube
    heritage: Helm
data:
---
# Source: sonarqube/templates/copy-plugins.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-sonarqube-copy-plugins
  labels:
    app: sonarqube
    chart: sonarqube-5.2.1
    release: sonarqube
    heritage: Helm
data:
  copy_plugins.sh: |-
      #!/bin/bash
      for f in /opt/sonarqube/extensions/plugins/tmp/*.jar
      do
        file=${f##*/} && file=${file%-[0-9]*}
        for original in /opt/sonarqube/extensions/plugins/*.jar
        do
          originalfile=${original##*/} && originalfile=${originalfile%-[0-9]*}
          if [ "$originalfile" = "$file" ]; then
            rm -f "$original"
          fi
        done
      done
      cp /opt/sonarqube/extensions/plugins/tmp/*.jar /opt/sonarqube/extensions/plugins/
      /opt/sonarqube/bin/run.sh
---
# Source: sonarqube/templates/install-plugins.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-sonarqube-install-plugins
  labels:
    app: sonarqube
    chart: sonarqube-5.2.1
    release: sonarqube
    heritage: Helm
data:
  install_plugins.sh: |-
    cd /opt/sonarqube/extensions/plugins/tmp
---
# Source: sonarqube/templates/tests/test-config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sonarqube-sonarqube-tests
  labels:
    app: sonarqube
    chart: sonarqube-5.2.1
    release: sonarqube
    heritage: Helm
data:
  run.sh: |-
    @test "Testing Sonarqube UI is accessible" {
      curl --connect-timeout 5 --retry 12 --retry-delay 1 --retry-max-time 60 sonarqube-sonarqube:9000/sessions/new
    }
---
# Source: sonarqube/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sonarqube-sonarqube
  labels:
    app: sonarqube
    chart: sonarqube-5.2.1
    release: sonarqube
    heritage: Helm

spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: sonarqube
    release: sonarqube
---
# Source: sonarqube/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube-sonarqube
  labels:
    app: sonarqube
    chart: sonarqube-5.2.1
    release: sonarqube
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
      release: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
        release: sonarqube

    spec:
      securityContext:
        fsGroup: 999
      initContainers:
        - name: chmod-volume-mounts
          image: busybox:1.31
          command:
            - "sh"
            - "-c"
            - 'mkdir -p $(printf "/opt/sonarqube/${1-%s\n}" temp logs data extensions/downloads extensions/plugins/tmp extensions/plugins certs) &&
               chown 999:999 -R $(printf "/opt/sonarqube/${1-%s\n}" temp logs data extensions/downloads extensions/plugins/tmp extensions/plugins certs)'
          volumeMounts:
          - mountPath: /opt/sonarqube/temp
            name: sonarqube
            subPath: temp
          - mountPath: /opt/sonarqube/logs
            name: sonarqube
            subPath: logs
          - mountPath: /opt/sonarqube/data
            name: sonarqube
            subPath: data
          - mountPath: /opt/sonarqube/extensions/plugins/tmp
            name: sonarqube
            subPath: tmp
          - mountPath: /opt/sonarqube/extensions/downloads
            name: sonarqube
            subPath: downloads
          - mountPath: /opt/sonarqube/extensions/plugins
            name: sonarqube
            subPath: plugins
        - name: init-sysctl
          image: busybox:1.31
          securityContext:
            privileged: true
          command:
          - /bin/sh
          - -c
          - 'if [[ "$(sysctl -n vm.max_map_count)" -lt 262144 ]]; then sysctl -w vm.max_map_count=262144; fi'
      containers:
        - name: sonarqube
          image: registry.dsop.io/platform-one/apps/sonarqube/sonarqube:8.3-community
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          env:
            - name: SONARQUBE_WEB_JVM_OPTS
              value: ""
            - name: SONARQUBE_JDBC_USERNAME
            - name: SONARQUBE_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sonarqube-postgresql
                  key: postgresql-password
            - name: SONARQUBE_JDBC_URL
          livenessProbe:
            httpGet:
              path: /sessions/new
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /sessions/new
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 6
          volumeMounts:
            - mountPath: /opt/sonarqube/data
              name: sonarqube
              subPath: data
            - mountPath: /opt/sonarqube/extensions/plugins/tmp
              name: sonarqube
              subPath: tmp
            - mountPath: /opt/sonarqube/extensions/downloads
              name: sonarqube
              subPath: downloads
            - mountPath: /opt/sonarqube/extensions/plugins
              name: sonarqube
              subPath: plugins
            - mountPath: /opt/sonarqube/temp
              name: sonarqube
              subPath: temp
            - mountPath: /opt/sonarqube/logs
              name: sonarqube
              subPath: logs
            - mountPath: /tmp
              name: tmp-dir
            - name: copy-plugins
              mountPath: /tmp/scripts
          resources:
            {}
      volumes:
      - name: install-plugins
        configMap:
          name: sonarqube-sonarqube-install-plugins
          items:
            - key: install_plugins.sh
              path: install_plugins.sh
      - name: copy-plugins
        configMap:
          name: sonarqube-sonarqube-copy-plugins
          defaultMode: 0755
          items:
            - key: copy_plugins.sh
              path: copy_plugins.sh
      - name: sonarqube
        emptyDir: {}
      - name : tmp-dir
        emptyDir: {}
---
# Source: sonarqube/templates/tests/sonarqube-test.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "sonarqube-ui-test"
  annotations:
    "helm.sh/hook": test-success
  labels:
    app: sonarqube
    chart: sonarqube-5.2.1
    release: sonarqube
    heritage: Helm
spec:
  initContainers:
    - name: "test-framework"
      image: dduportal/bats:0.4.0
      command:
      - "bash"
      - "-c"
      - |
        set -ex
        # copy bats to tools dir
        cp -R /usr/local/libexec/ /tools/bats/
      volumeMounts:
      - mountPath: /tools
        name: tools
  containers:
    - name: sonarqube-ui-test
      image: registry.dsop.io/platform-one/apps/sonarqube/sonarqube:8.3-community
      command: ["/tools/bats/bats", "-t", "/tests/run.sh"]
      volumeMounts:
      - mountPath: /tests
        name: tests
        readOnly: true
      - mountPath: /tools
        name: tools
  volumes:
  - name: tests
    configMap:
      name: sonarqube-sonarqube-tests
  - name: tools
    emptyDir: {}
  restartPolicy: Never
